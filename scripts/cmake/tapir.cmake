if(NOT TAPIR_DOT_CMAKE_INCLUDED)
set(TAPIR_DOT_CMAKE_INCLUDED YES)

include(ExternalProject)

#tapir
function(add_tapir TAPIR_TARGET LIBOS_TARGET HOARD_TARGET TAPIR_SOURCE_DIR)
    execute_process(COMMAND basename ${TAPIR_SOURCE_DIR} OUTPUT_VARIABLE TAPIR_BASENAME OUTPUT_STRIP_TRAILING_WHITESPACE)
    execute_process(COMMAND git apply ../${TAPIR_BASENAME}.diff WORKING_DIRECTORY ${TAPIR_SOURCE_DIR} ERROR_QUIET)
  set(TAPIR_BINARY_DIR ${CMAKE_BINARY_DIR}/ExternalProject/${TAPIR_TARGET})

  ExternalProject_Add(${TAPIR_TARGET}
    PREFIX ${TAPIR_BINARY_DIR}
    SOURCE_DIR ${TAPIR_SOURCE_DIR}
    CONFIGURE_COMMAND echo "No CONFIGURE_COMMAND for target `${TAPIR_TARGET}`"
    BUILD_COMMAND make -C ${TAPIR_SOURCE_DIR} PREFIX=${TAPIR_BINARY_DIR} MALLOC=${HOARD_TARGET} DEMETER_INCLUDE=${CMAKE_SOURCE_DIR}/include DEMETER_LIBOS_SO=$<TARGET_FILE:${LIBOS_TARGET}> DEMETER_COMMON_A=$<TARGET_FILE:dmtr-libos-common> DEMETER_LATENCY_A=$<TARGET_FILE:dmtr-latency> OPTIMIZATION=${OPT_CFLAGS} V=1
    WORKING_DIRECTORY ${TAPIR_DIR}
    INSTALL_COMMAND echo "No INSTALL_COMMAND for target `${TAPIR_TARGET}`"
    )
endfunction(add_tapir)

# todo: is there a way to get this to run on `make clean`?
add_custom_target(${TAPIR_TARGET}-clean
    COMMAND make clean
    WORKING_DIRECTORY ${TAPIR_SOURCE_DIR}
)

endif(NOT TAPIR_DOT_CMAKE_INCLUDED)
